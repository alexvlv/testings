# $Id$

cmake_minimum_required(VERSION 3.16)
#set(CMAKE_VERBOSE_MAKEFILE ON)

if(NOT CMAKE_BUILD_TYPE)
	set(CMAKE_BUILD_TYPE Release)
endif()

set(SDK_LNK ${CMAKE_CURRENT_SOURCE_DIR}/.sdk)
execute_process(
	COMMAND readlink -s -e ${SDK_LNK}
	OUTPUT_VARIABLE SDK_DIR
	OUTPUT_STRIP_TRAILING_WHITESPACE
)

execute_process(
	COMMAND basename ${CMAKE_CURRENT_SOURCE_DIR}
	ERROR_QUIET
	OUTPUT_VARIABLE PROJECT_NAME
	OUTPUT_STRIP_TRAILING_WHITESPACE
)
message("-- Configure project:[${PROJECT_NAME}]")
add_compile_definitions(APPNAME="${PROJECT_NAME}")

project(${PROJECT_NAME} LANGUAGES CXX C)
set(PROJECT_UNSTRIPPED ${PROJECT_NAME}-unstripped)

find_package(QT NAMES Qt6 Qt5)
#set(QT_VERSION_MAJOR 6)
#set(QT_VERSION ${Qt6_VERSION})

list(APPEND QT_PACKAGES
	Core
	Network
	Multimedia
)

if(QT_DEFAULT_MAJOR_VERSION EQUAL 6)
	list(APPEND QT_PACKAGES
		Core5Compat
	)
endif()

find_package(Qt${QT_VERSION_MAJOR} COMPONENTS  ${QT_PACKAGES} REQUIRED)

set(CMAKE_INCLUDE_CURRENT_DIR ON)
set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)
set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

file(GLOB SOURCES *.cpp )
file(GLOB HEADERS *.h )
file(GLOB FORMS *.ui )

#set(CMAKE_SYSROOT ${SYSROOT_DIR})
#set (CMAKE_FIND_ROOT_PATH ${SYSROOT_DIR})

set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)

#set CMAKE_BUILD_WITH_INSTALL_RPATH and CMAKE_INSTALL_RPATH before add_executable
#set(CMAKE_BUILD_WITH_INSTALL_RPATH TRUE)
#set(CMAKE_INSTALL_RPATH "/opt/Qt-mips-5.15.2-release/lib")

add_executable(${PROJECT_UNSTRIPPED} #EXCLUDE_FROM_ALL
  ${SOURCES}
  ${HEADERS}
  ${FORMS}
)

set(QT_LIBS ${QT_PACKAGES})
list(TRANSFORM QT_LIBS PREPEND Qt${QT_VERSION_MAJOR}::)
target_link_libraries(${PROJECT_UNSTRIPPED}
	${QT_LIBS}
)

add_custom_command(
    TARGET ${PROJECT_UNSTRIPPED} POST_BUILD
	COMMAND +${CMAKE_BUILD_TOOL} ${PROJECT_NAME}
)

add_custom_target(strip
    DEPENDS ${PROJECT_NAME}
)

add_custom_target(${PROJECT_NAME}
    DEPENDS ${PROJECT_UNSTRIPPED}
    COMMAND ${CMAKE_STRIP} ${PROJECT_UNSTRIPPED} -o ${PROJECT_NAME}
    COMMENT "Strip ${PROJECT_NAME}"
)

#add_custom_target(gitupd
#	COMMAND +${CMAKE_BUILD_TOOL} git
#	COMMAND +${CMAKE_BUILD_TOOL} all
#)

include(${CMAKE_SOURCE_DIR}/cmake/install.cmake)
include(${CMAKE_SOURCE_DIR}/cmake/gitversion.cmake)
include(${CMAKE_SOURCE_DIR}/cmake/clean.cmake)
include(${CMAKE_SOURCE_DIR}/cmake/suffix.cmake)

